project.plugins.apply("java")
project.plugins.apply("java-library")
project.plugins.apply("idea")
project.plugins.apply("maven-publish")

project.ext.jitpack = Boolean.parseBoolean(System.getenv("JITPACK") ?: "false");

if (!project.ext.jitpack) {
    project.logger.lifecycle("Building on local.")
    project.version = version
    project.group = group
} else {
    project.logger.lifecycle("Building on jitpack platform.")
}

wrapper {
    gradleVersion = "8.14.3"
}

sourceSets.main.java.srcDirs = ["src", "gen"]
sourceSets.main.resources.srcDirs = ["res"]

repositories {
    mavenCentral()
    maven { url "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
    maven { url "https://www.jitpack.io" }
    maven { url "https://maven.nikr.net/" }
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    dependsOn tasks.named("sourcesJar")

    options.encoding = "UTF-8"
    options.generatedSourceOutputDirectory.set(project.file("gen"))

    sourceCompatibility = JavaVersion.VERSION_20
    targetCompatibility = JavaVersion.VERSION_1_8

    options.compilerArgs = [
            "--release", "8",
            "-Xlint:-options"
    ]

    doFirst {
        delete options.generatedSourceOutputDirectory.get().asFile.listFiles()
    }
}

dependencies {
    annotationProcessor "com.pkware.jabel:jabel-javac-plugin:$jabelVersion"
    compileOnly "com.pkware.jabel:jabel-javac-plugin:$jabelVersion"

    api "com.github.Anuken.Arc:arc-core:$arcVersion"
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
}
